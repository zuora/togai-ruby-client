=begin
#Togai Apis

#APIs for Togai App

The version of the OpenAPI document: 1.0
Contact: engg@togai.com
Generated by: https://openapi-generator.tech
Generator version: 7.10.0

=end

require 'cgi'

module TogaiClient
  class InvoiceGroupsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Add accounts to an invoice group
    # This API let’s you to add accounts to an invoice group
    # @param invoice_group_id [String] 
    # @param update_invoice_group_accounts [UpdateInvoiceGroupAccounts] Payload to add or remove accounts to/from an invoice group
    # @param [Hash] opts the optional parameters
    # @return [InvoiceGroups]
    def add_invoice_group_accounts(invoice_group_id, update_invoice_group_accounts, opts = {})
      data, _status_code, _headers = add_invoice_group_accounts_with_http_info(invoice_group_id, update_invoice_group_accounts, opts)
      data
    end

    # Add accounts to an invoice group
    # This API let’s you to add accounts to an invoice group
    # @param invoice_group_id [String] 
    # @param update_invoice_group_accounts [UpdateInvoiceGroupAccounts] Payload to add or remove accounts to/from an invoice group
    # @param [Hash] opts the optional parameters
    # @return [Array<(InvoiceGroups, Integer, Hash)>] InvoiceGroups data, response status code and response headers
    def add_invoice_group_accounts_with_http_info(invoice_group_id, update_invoice_group_accounts, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InvoiceGroupsApi.add_invoice_group_accounts ...'
      end
      # verify the required parameter 'invoice_group_id' is set
      if @api_client.config.client_side_validation && invoice_group_id.nil?
        fail ArgumentError, "Missing the required parameter 'invoice_group_id' when calling InvoiceGroupsApi.add_invoice_group_accounts"
      end
      if @api_client.config.client_side_validation && invoice_group_id.to_s.length > 512
        fail ArgumentError, 'invalid value for "invoice_group_id" when calling InvoiceGroupsApi.add_invoice_group_accounts, the character length must be smaller than or equal to 512.'
      end

      # verify the required parameter 'update_invoice_group_accounts' is set
      if @api_client.config.client_side_validation && update_invoice_group_accounts.nil?
        fail ArgumentError, "Missing the required parameter 'update_invoice_group_accounts' when calling InvoiceGroupsApi.add_invoice_group_accounts"
      end
      # resource path
      local_var_path = '/invoice_groups/{invoice_group_id}/add_accounts'.sub('{' + 'invoice_group_id' + '}', CGI.escape(invoice_group_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(update_invoice_group_accounts)

      # return_type
      return_type = opts[:debug_return_type] || 'InvoiceGroups'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"InvoiceGroupsApi.add_invoice_group_accounts",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InvoiceGroupsApi#add_invoice_group_accounts\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create an invoice group
    # This API let’s you to create an invoice group
    # @param create_invoice_group_request [CreateInvoiceGroupRequest] Payload to approve or decline a proposal
    # @param [Hash] opts the optional parameters
    # @return [InvoiceGroups]
    def create_invoice_group(create_invoice_group_request, opts = {})
      data, _status_code, _headers = create_invoice_group_with_http_info(create_invoice_group_request, opts)
      data
    end

    # Create an invoice group
    # This API let’s you to create an invoice group
    # @param create_invoice_group_request [CreateInvoiceGroupRequest] Payload to approve or decline a proposal
    # @param [Hash] opts the optional parameters
    # @return [Array<(InvoiceGroups, Integer, Hash)>] InvoiceGroups data, response status code and response headers
    def create_invoice_group_with_http_info(create_invoice_group_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InvoiceGroupsApi.create_invoice_group ...'
      end
      # verify the required parameter 'create_invoice_group_request' is set
      if @api_client.config.client_side_validation && create_invoice_group_request.nil?
        fail ArgumentError, "Missing the required parameter 'create_invoice_group_request' when calling InvoiceGroupsApi.create_invoice_group"
      end
      # resource path
      local_var_path = '/invoice_groups'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(create_invoice_group_request)

      # return_type
      return_type = opts[:debug_return_type] || 'InvoiceGroups'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"InvoiceGroupsApi.create_invoice_group",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InvoiceGroupsApi#create_invoice_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get information of an invoice group
    # This API let’s you to get information of an invoice group
    # @param invoice_group_id [String] 
    # @param [Hash] opts the optional parameters
    # @return [InvoiceGroupAccountsPaginatedResponse]
    def get_invoice_group(invoice_group_id, opts = {})
      data, _status_code, _headers = get_invoice_group_with_http_info(invoice_group_id, opts)
      data
    end

    # Get information of an invoice group
    # This API let’s you to get information of an invoice group
    # @param invoice_group_id [String] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InvoiceGroupAccountsPaginatedResponse, Integer, Hash)>] InvoiceGroupAccountsPaginatedResponse data, response status code and response headers
    def get_invoice_group_with_http_info(invoice_group_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InvoiceGroupsApi.get_invoice_group ...'
      end
      # verify the required parameter 'invoice_group_id' is set
      if @api_client.config.client_side_validation && invoice_group_id.nil?
        fail ArgumentError, "Missing the required parameter 'invoice_group_id' when calling InvoiceGroupsApi.get_invoice_group"
      end
      if @api_client.config.client_side_validation && invoice_group_id.to_s.length > 512
        fail ArgumentError, 'invalid value for "invoice_group_id" when calling InvoiceGroupsApi.get_invoice_group, the character length must be smaller than or equal to 512.'
      end

      # resource path
      local_var_path = '/invoice_groups/{invoice_group_id}'.sub('{' + 'invoice_group_id' + '}', CGI.escape(invoice_group_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'InvoiceGroupAccountsPaginatedResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"InvoiceGroupsApi.get_invoice_group",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InvoiceGroupsApi#get_invoice_group\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List Invoice Groups
    # This API let’s you to list invoice groups
    # @param [Hash] opts the optional parameters
    # @return [InvoiceGroupPaginatedResponse]
    def list_invoice_groups(opts = {})
      data, _status_code, _headers = list_invoice_groups_with_http_info(opts)
      data
    end

    # List Invoice Groups
    # This API let’s you to list invoice groups
    # @param [Hash] opts the optional parameters
    # @return [Array<(InvoiceGroupPaginatedResponse, Integer, Hash)>] InvoiceGroupPaginatedResponse data, response status code and response headers
    def list_invoice_groups_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InvoiceGroupsApi.list_invoice_groups ...'
      end
      # resource path
      local_var_path = '/invoice_groups'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'InvoiceGroupPaginatedResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"InvoiceGroupsApi.list_invoice_groups",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InvoiceGroupsApi#list_invoice_groups\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Remove accounts from an invoice group. Removing all accounts will also delete the invoice group
    # This API let’s you to remove accounts from an invoice group. Removing all accounts will also delete the invoice group
    # @param invoice_group_id [String] 
    # @param update_invoice_group_accounts [UpdateInvoiceGroupAccounts] Payload to add or remove accounts to/from an invoice group
    # @param [Hash] opts the optional parameters
    # @return [BaseSuccessResponse]
    def remove_invoice_group_accounts(invoice_group_id, update_invoice_group_accounts, opts = {})
      data, _status_code, _headers = remove_invoice_group_accounts_with_http_info(invoice_group_id, update_invoice_group_accounts, opts)
      data
    end

    # Remove accounts from an invoice group. Removing all accounts will also delete the invoice group
    # This API let’s you to remove accounts from an invoice group. Removing all accounts will also delete the invoice group
    # @param invoice_group_id [String] 
    # @param update_invoice_group_accounts [UpdateInvoiceGroupAccounts] Payload to add or remove accounts to/from an invoice group
    # @param [Hash] opts the optional parameters
    # @return [Array<(BaseSuccessResponse, Integer, Hash)>] BaseSuccessResponse data, response status code and response headers
    def remove_invoice_group_accounts_with_http_info(invoice_group_id, update_invoice_group_accounts, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InvoiceGroupsApi.remove_invoice_group_accounts ...'
      end
      # verify the required parameter 'invoice_group_id' is set
      if @api_client.config.client_side_validation && invoice_group_id.nil?
        fail ArgumentError, "Missing the required parameter 'invoice_group_id' when calling InvoiceGroupsApi.remove_invoice_group_accounts"
      end
      if @api_client.config.client_side_validation && invoice_group_id.to_s.length > 512
        fail ArgumentError, 'invalid value for "invoice_group_id" when calling InvoiceGroupsApi.remove_invoice_group_accounts, the character length must be smaller than or equal to 512.'
      end

      # verify the required parameter 'update_invoice_group_accounts' is set
      if @api_client.config.client_side_validation && update_invoice_group_accounts.nil?
        fail ArgumentError, "Missing the required parameter 'update_invoice_group_accounts' when calling InvoiceGroupsApi.remove_invoice_group_accounts"
      end
      # resource path
      local_var_path = '/invoice_groups/{invoice_group_id}/remove_accounts'.sub('{' + 'invoice_group_id' + '}', CGI.escape(invoice_group_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(update_invoice_group_accounts)

      # return_type
      return_type = opts[:debug_return_type] || 'BaseSuccessResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"InvoiceGroupsApi.remove_invoice_group_accounts",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InvoiceGroupsApi#remove_invoice_group_accounts\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
